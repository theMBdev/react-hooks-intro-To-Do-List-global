{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Todo.js","components/TodoForm.js","App.js","index.js"],"names":["state","action","type","todos","payload","map","todo","id","isCompleted","filter","initialState","text","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","completeTodo","addTodo","deleteTodo","Todo","context","useContext","style","textDecoration","className","onClick","src","alt","TodoForm","useState","setValue","onSubmit","e","preventDefault","newTodo","Math","floor","random","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"0NAAe,WAACA,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,WACD,OAAO,2BACAF,GADP,IAEIG,MAAM,GAAD,mBAAMH,EAAMG,OAAZ,CAAmBF,EAAOG,YAGnC,IAAK,gBACD,OAAO,2BACAJ,GADP,IAEIG,MAAOH,EAAMG,MAAME,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAON,EAAOG,QAAnB,2BAExBE,GAFwB,IAElBE,aAAa,IAEvBF,OAIZ,IAAK,cACD,OAAO,2BACAN,GADP,IAGIG,MAAOH,EAAMG,MAAMM,QAAO,SAAAH,GAAI,OAAIA,EAAKC,KAAON,EAAOG,aAGrE,QACI,OAAOJ,ICxBTU,EAAe,CACjBP,MAAO,CACH,CACEI,GAAI,EACJI,KAAM,oBACNH,aAAa,GAEf,CACED,GAAI,EACJI,KAAM,kBACNH,aAAa,GAEf,CACED,GAAI,EACJI,KAAM,4BACNH,aAAa,KAMVI,EAAgBC,wBAAcH,GAG9BI,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAClBC,qBAAWC,EAAYP,GADL,mBACrCV,EADqC,KAC9BkB,EAD8B,KAwB9C,OACE,kBAACN,EAAcO,SAAf,CAAwBC,MAAO,CAC3BjB,MAAMH,EAAMG,MACZkB,aAjBN,SAAsBd,GACpBW,EAAS,CACLhB,KAAM,gBACNE,QAASG,KAeTe,QAzBN,SAAiBX,GACbO,EAAS,CACLhB,KAAM,WACNE,QAASO,KAuBXY,WAZR,SAAoBhB,GAClBW,EAAS,CACLhB,KAAM,cACNE,QAASG,OAWNQ,ICtDIS,EAAO,WAEhB,IAAMC,EAAUC,qBAAWd,GACpBS,EAAgBK,qBAAWd,GAA3BS,aACAE,EAAcG,qBAAWd,GAAzBW,WAIP,OACE,oCACCE,EAAQtB,MAAME,KAAI,SAACC,GAAD,OACjB,yBAAKqB,MAAO,CAACC,eAAgBtB,EAAKE,YAAc,eAAiB,IAAKqB,UAAU,QAAQvB,EAAKK,KAChG,yBAAKkB,UAAU,oBACb,4BAAQA,UAAU,kBAAkBC,QAAS,kBAAMT,EAAaf,EAAKC,MAAK,yBAAKwB,IAAI,gBAAgBC,IAAI,OACvG,4BAAQH,UAAU,gBAAgBC,QAAS,kBAAMP,EAAWjB,EAAKC,MAAK,yBAAKwB,IAAI,UAAUC,IAAI,cCdvFC,EAAW,WAAM,MAEAC,mBAAS,IAFT,mBAEnBd,EAFmB,KAEZe,EAFY,KAGlBb,EAAYI,qBAAWd,GAAvBU,QAgBR,OACE,0BAAMc,SAfa,SAAAC,GAEnB,GADAA,EAAEC,iBACElB,EAAJ,CAEA,IAAMmB,EAAU,CACdhC,GAAIiC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB/B,KAAMS,EACNZ,aAAa,GAGfc,EAAQiB,GACRJ,EAAS,OAKP,2BAAOjC,KAAK,OAAO2B,UAAU,QAAQT,MAAOA,EAAOuB,SAAU,SAAAN,GAAC,OAAIF,EAASE,EAAEO,OAAOxB,QAAQyB,YAAY,kBCHjGC,MAbf,WACE,OACE,kBAAC,EAAD,KACA,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,aACf,kBAAC,EAAD,MACA,kBAAC,EAAD,UCXNkB,IAASC,OACL,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8c2b2c37.chunk.js","sourcesContent":["export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_TODO':\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, action.payload]\r\n            }\r\n\r\n            case 'COMPLETE_TODO':\r\n                return {\r\n                    ...state,\r\n                    todos: state.todos.map( todo => todo.id === action.payload ?    \r\n                        // transform the one with a matching id                    \r\n                        {...todo, isCompleted: true} :\r\n                        // otherwise return original todo\r\n                        todo\r\n                    )\r\n                }\r\n                \r\n            case 'DELETE_TODO':\r\n                return {\r\n                    ...state,                    \r\n                    // filter the todos and return the ones were the id is not the one given\r\n                    todos: state.todos.filter(todo => todo.id !== action.payload )                    \r\n                }               \r\n\r\n    default:\r\n        return state;\r\n    }\r\n}    ","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = {\r\n    todos: [\r\n        {\r\n          id: 1,\r\n          text: 'Learn about React',\r\n          isCompleted: false\r\n        },    \r\n        {\r\n          id: 2,\r\n          text: 'Finish todo app',\r\n          isCompleted: false\r\n        },    \r\n        {\r\n          id: 3,\r\n          text: 'These are in global state',\r\n          isCompleted: false\r\n        },\r\n      ]\r\n}\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  function addTodo(text) {\r\n      dispatch({\r\n          type: 'ADD_TODO',\r\n          payload: text\r\n      })\r\n  }   \r\n\r\n  function completeTodo(id) {\r\n    dispatch({\r\n        type: 'COMPLETE_TODO',  \r\n        payload: id\r\n    })\r\n}  \r\n\r\nfunction deleteTodo(id) {\r\n  dispatch({\r\n      type: 'DELETE_TODO',  \r\n      payload: id\r\n  })\r\n}  \r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{\r\n        todos:state.todos,\r\n        completeTodo,\r\n        addTodo,\r\n        deleteTodo\r\n        }}>\r\n        {children}\r\n    </GlobalContext.Provider>\r\n    );\r\n}","import React, {useContext} from 'react'\r\nimport { GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const Todo = () => {\r\n\r\n    const context = useContext(GlobalContext);\r\n    const {completeTodo} = useContext(GlobalContext);\r\n    const {deleteTodo} = useContext(GlobalContext);\r\n\r\n    // console.log(\"Context\", context);\r\n\r\n    return (  \r\n      <>\r\n      {context.todos.map((todo) => (\r\n        <div style={{textDecoration: todo.isCompleted ? 'line-through' : ''}} className=\"todo\">{todo.text}\r\n     <div className=\"button-container\">\r\n       <button className=\"button-complete\" onClick={() => completeTodo(todo.id)}><img src=\"./checked.png\" alt=\"/\"></img></button>\r\n       <button className=\"button-delete\" onClick={() => deleteTodo(todo.id)}><img src=\"./x.png\" alt=\"x\"></img></button>\r\n     </div>\r\n     </div>\r\n      ))}      \r\n     </>\r\n    )\r\n  }","import React, {useState, useContext} from 'react';\r\nimport { GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const TodoForm = () => {\r\n    //{addTodo}\r\n    const [value, setValue] = useState('');\r\n    const { addTodo } = useContext(GlobalContext);\r\n\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      if(!value) return;\r\n\r\n      const newTodo = {\r\n        id: Math.floor(Math.random() * 100000000),\r\n        text: value,\r\n        isCompleted: false\r\n      }\r\n\r\n      addTodo(newTodo);  \r\n      setValue('');\r\n    }\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" className=\"input\" value={value} onChange={e => setValue(e.target.value)} placeholder=\"Add todo...\"></input>    \r\n      </form>\r\n    )\r\n  }","import React from 'react';\nimport './App.css';\n\nimport { Todo } from './components/Todo';\nimport { TodoForm } from './components/TodoForm';\n\nimport { GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n    <div className=\"app\">\n      <div className=\"todo-list\">\n      <TodoForm/>\n      <Todo/>        \n      </div>\n    </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />, document.getElementById('root'));\n"],"sourceRoot":""}